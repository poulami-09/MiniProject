#include<Servo.h>
Servo myservo;

int pos;
int pump_relay = 12;
#define PIN_A1 (15)
#define PIN_A2 (16)
#define PIN_A3 (17)
#define PIN_A4 (18)
int Led1 = 16;//Red
int Led2 = 17;//Blue
int Led3 = 18;//Green
int buzz = 15;
int smokeA0 = A0;
int flameLeft = 4;
int flameRight = 6;
int flameForward = 5  ;
int Flame1 = HIGH;
int Flame2 = HIGH;
int Flame3 = HIGH;
int LM1 = 8;           // left motor1
int LM2 = 9;           // left motor2
int RM1 = 10;          // right motor1
int RM2 = 11;          // right motor2
int sensorThres=160;
boolean fire = false;
boolean gas = false;

void setup() 
{
  myservo.attach(13);
  myservo.write(0); 
  
  pinMode(Led1, OUTPUT);
  pinMode(Led2,OUTPUT);
  pinMode(Led3,OUTPUT);
  pinMode(buzz,OUTPUT);
  pinMode(flameLeft, INPUT);
  pinMode(flameRight, INPUT);
  pinMode(flameForward, INPUT);
  pinMode(smokeA0,INPUT);
  pinMode(pump_relay, OUTPUT);
  pinMode(LM1, OUTPUT);
  pinMode(LM2, OUTPUT);
  pinMode(RM1, OUTPUT);
  pinMode(RM2, OUTPUT);
  Serial.begin(9600);
}

void loop() 
{
  //For sensors
  int analogSensor = analogRead(smokeA0);
  Flame1 = digitalRead(flameLeft);
  Flame2 = digitalRead(flameRight);
  Flame3 = digitalRead(flameForward);
  fire=false;
  gas=false;
  
  digitalWrite(pump_relay,HIGH);
  
  //Flame Sensor Left
 if (Flame1 == LOW)
  {
    Serial.println("(Flame Sensor Left)Fire!!!");
    digitalWrite(Led1, HIGH);
    digitalWrite(buzz,HIGH);
    move_left();
     delay(500);
     Serial.println("Moving Left");  
   move_forward();
    delay(1000);
     Serial.println("Moving Forward ....");
   fire=true;
 }
  //Flame Sensor Right
   else if (Flame2 == LOW)
  {
    Serial.println("(Flame Sensor Right)Fire!!!");
    digitalWrite(Led1, HIGH);
    digitalWrite(buzz,HIGH);
    move_right();
     delay(500);
     Serial.println("Moving Right");
     
    move_forward();
    delay(1000);
     Serial.println("Moving Forward ....");
    fire=true;
  }
  //Flame Sensor Forward
   else if (Flame3 == LOW)
  {
   Serial.println("(Flame Sensor Forward)Fire!!!");
    digitalWrite(Led1, HIGH);
    digitalWrite(buzz,HIGH);
    move_forward();
    delay(4000);
    Serial.println("Moving Forward"); 
   fire=true;
 }
  else 
  {
    Serial.println("No worries");
    digitalWrite(Led1, LOW);
    digitalWrite(Led2, LOW);
    digitalWrite(Led3, LOW);
    digitalWrite(buzz,LOW);
    fire=false;
  }

  //Gas sensor
 Serial.print("Pin A0: ");
 Serial.println(analogSensor);
  // Checks if it has reached the threshold value
 if (analogSensor > sensorThres)
  {
    digitalWrite(Led3, HIGH);
    digitalWrite(buzz,HIGH);
    Serial.println("Alert Gas Detected ");
    gas=true;
    if(gas==true)
    {
      
      Serial.println("Email sent for gas.");
    }
  }
 else
  {
    digitalWrite(Led3, LOW);
    digitalWrite(buzz,LOW);
    Serial.println("Normal gas");
  }
  
  //while fire detected
 if (fire == true)
  {
    move_stop();
    Serial.println("Stopped moving");
    Serial.println("SMS sent for fire.");
    digitalWrite(buzz,LOW);
    digitalWrite(Led1,LOW);
    servo();
  }
  
  fire=false;
  gas=false;
}
void servo()
{
  if(fire==true)
  {
   digitalWrite(Led2,HIGH);
   Serial.println("Pump switched on");
   digitalWrite(pump_relay,LOW);
   delay(100);
    //For Servo Motor
   Serial.println("Servo started.");
   for(pos=0;pos<=180;pos++)
   {
    myservo.write(pos);
    delay(25);
   }
   delay(25);
   for(pos=180;pos>=0;pos--)
   {
    myservo.write(pos);
    delay(25);
   } 
   delay(25);
   Serial.println("Servo stopped.");
   delay(100);// for how long pump will remain on
   digitalWrite(pump_relay,LOW);
   Serial.println("Pump switched off");
    digitalWrite(Led2,LOW);
   myservo.write(0);
   }
}

void move_forward()
{
    digitalWrite(LM1, HIGH);
    digitalWrite(LM2, LOW);
    digitalWrite(RM1, HIGH);
    digitalWrite(RM2, LOW);
}

void move_right()
{
    digitalWrite(LM1, HIGH);
    digitalWrite(LM2, LOW);
    digitalWrite(RM1, HIGH);
    digitalWrite(RM2, HIGH);
}

void move_left()
{
    digitalWrite(LM1, HIGH);
    digitalWrite(LM2, HIGH);
    digitalWrite(RM1, HIGH);
    digitalWrite(RM2, LOW);
}
void move_stop()
{
    digitalWrite(LM1, HIGH);
    digitalWrite(LM2, HIGH);
    digitalWrite(RM1, HIGH);
    digitalWrite(RM2, HIGH);
}
